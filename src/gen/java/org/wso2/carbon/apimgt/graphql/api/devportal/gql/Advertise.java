/** Generated by the default template from graphql-java-generator */
package org.wso2.carbon.apimgt.graphql.api.devportal.gql;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLInputParameters;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("Advertise")
public class Advertise  {

	public Advertise(){
		// No action
	}

	@GraphQLScalar(fieldName = "advertised", graphQLTypeSimpleName = "Boolean", javaClass = Boolean.class)
	Boolean advertised;


	@GraphQLScalar(fieldName = "originalStoreUrl", graphQLTypeSimpleName = "String", javaClass = String.class)
	String originalStoreUrl;


	@GraphQLScalar(fieldName = "apiOwner", graphQLTypeSimpleName = "String", javaClass = String.class)
	String apiOwner;



	public void setAdvertised(Boolean advertised) {
		this.advertised = advertised;
	}

	public Boolean getAdvertised() {
		return advertised;
	}

	public void setOriginalStoreUrl(String originalStoreUrl) {
		this.originalStoreUrl = originalStoreUrl;
	}

	public String getOriginalStoreUrl() {
		return originalStoreUrl;
	}

	public void setApiOwner(String apiOwner) {
		this.apiOwner = apiOwner;
	}

	public String getApiOwner() {
		return apiOwner;
	}

    public String toString() {
        return "Advertise {"
				+ "advertised: " + advertised
				+ ", "
				+ "originalStoreUrl: " + originalStoreUrl
				+ ", "
				+ "apiOwner: " + apiOwner
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Advertised("advertised"),
		OriginalStoreUrl("originalStoreUrl"),
		ApiOwner("apiOwner");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private Boolean advertised;
		private String originalStoreUrl;
		private String apiOwner;


		public Builder withAdvertised(Boolean advertised) {
			this.advertised = advertised;
			return this;
		}
		public Builder withOriginalStoreUrl(String originalStoreUrl) {
			this.originalStoreUrl = originalStoreUrl;
			return this;
		}
		public Builder withApiOwner(String apiOwner) {
			this.apiOwner = apiOwner;
			return this;
		}

		public Advertise build() {
			Advertise _object = new Advertise();
			_object.setAdvertised(advertised);
			_object.setOriginalStoreUrl(originalStoreUrl);
			_object.setApiOwner(apiOwner);
			return _object;
		}
	}
}
