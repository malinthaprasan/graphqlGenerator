/** Generated by the default template from graphql-java-generator */
package org.wso2.carbon.apimgt.graphql.api.devportal.gql;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLInputParameters;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("APIEndpointURLsDTO")
public class APIEndpointURLsDTO  {

	public APIEndpointURLsDTO(){
		// No action
	}

	@GraphQLScalar(fieldName = "environmentName", graphQLTypeSimpleName = "String", javaClass = String.class)
	String environmentName;


	@GraphQLScalar(fieldName = "environmentType", graphQLTypeSimpleName = "String", javaClass = String.class)
	String environmentType;


	@GraphQLNonScalar(fieldName = "urLs", graphQLTypeSimpleName = "URL", javaClass = URL.class)
	URL urLs;


	@GraphQLNonScalar(fieldName = "defaultUrls", graphQLTypeSimpleName = "DefaultURL", javaClass = DefaultURL.class)
	DefaultURL defaultUrls;



	public void setEnvironmentName(String environmentName) {
		this.environmentName = environmentName;
	}

	public String getEnvironmentName() {
		return environmentName;
	}

	public void setEnvironmentType(String environmentType) {
		this.environmentType = environmentType;
	}

	public String getEnvironmentType() {
		return environmentType;
	}

	public void setUrLs(URL urLs) {
		this.urLs = urLs;
	}

	public URL getUrLs() {
		return urLs;
	}

	public void setDefaultUrls(DefaultURL defaultUrls) {
		this.defaultUrls = defaultUrls;
	}

	public DefaultURL getDefaultUrls() {
		return defaultUrls;
	}

    public String toString() {
        return "APIEndpointURLsDTO {"
				+ "environmentName: " + environmentName
				+ ", "
				+ "environmentType: " + environmentType
				+ ", "
				+ "urLs: " + urLs
				+ ", "
				+ "defaultUrls: " + defaultUrls
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		EnvironmentName("environmentName"),
		EnvironmentType("environmentType"),
		UrLs("urLs"),
		DefaultUrls("defaultUrls");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private String environmentName;
		private String environmentType;
		private URL urLs;
		private DefaultURL defaultUrls;


		public Builder withEnvironmentName(String environmentName) {
			this.environmentName = environmentName;
			return this;
		}
		public Builder withEnvironmentType(String environmentType) {
			this.environmentType = environmentType;
			return this;
		}
		public Builder withUrLs(URL urLs) {
			this.urLs = urLs;
			return this;
		}
		public Builder withDefaultUrls(DefaultURL defaultUrls) {
			this.defaultUrls = defaultUrls;
			return this;
		}

		public APIEndpointURLsDTO build() {
			APIEndpointURLsDTO _object = new APIEndpointURLsDTO();
			_object.setEnvironmentName(environmentName);
			_object.setEnvironmentType(environmentType);
			_object.setUrLs(urLs);
			_object.setDefaultUrls(defaultUrls);
			return _object;
		}
	}
}
