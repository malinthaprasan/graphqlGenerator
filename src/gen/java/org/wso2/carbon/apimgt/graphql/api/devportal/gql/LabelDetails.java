/** Generated by the default template from graphql-java-generator */
package org.wso2.carbon.apimgt.graphql.api.devportal.gql;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLInputParameters;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("LabelDetails")
public class LabelDetails  {

	public LabelDetails(){
		// No action
	}

	@GraphQLScalar(fieldName = "description", graphQLTypeSimpleName = "String", javaClass = String.class)
	String description;


	@GraphQLScalar(fieldName = "accessUrls", graphQLTypeSimpleName = "String", javaClass = String.class)
	String accessUrls;



	public void setDescription(String description) {
		this.description = description;
	}

	public String getDescription() {
		return description;
	}

	public void setAccessUrls(String accessUrls) {
		this.accessUrls = accessUrls;
	}

	public String getAccessUrls() {
		return accessUrls;
	}

    public String toString() {
        return "LabelDetails {"
				+ "description: " + description
				+ ", "
				+ "accessUrls: " + accessUrls
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Description("description"),
		AccessUrls("accessUrls");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private String description;
		private String accessUrls;


		public Builder withDescription(String description) {
			this.description = description;
			return this;
		}
		public Builder withAccessUrls(String accessUrls) {
			this.accessUrls = accessUrls;
			return this;
		}

		public LabelDetails build() {
			LabelDetails _object = new LabelDetails();
			_object.setDescription(description);
			_object.setAccessUrls(accessUrls);
			return _object;
		}
	}
}
