/** Generated by the default template from graphql-java-generator */
package org.wso2.carbon.apimgt.graphql.api.devportal.gql;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLInputParameters;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import java.util.List;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("Query")
public class Query  {

	public Query(){
		// No action
	}

	@GraphQLNonScalar(fieldName = "getApiListing", graphQLTypeSimpleName = "ApiListing", javaClass = ApiListing.class)
	ApiListing getApiListing;


	@GraphQLNonScalar(fieldName = "getApi", graphQLTypeSimpleName = "Api", javaClass = Api.class)
	Api getApi;


	@GraphQLNonScalar(fieldName = "getTags", graphQLTypeSimpleName = "Tag", javaClass = Tag.class)
	List<Tag> getTags;



	public void setGetApiListing(ApiListing getApiListing) {
		this.getApiListing = getApiListing;
	}

	public ApiListing getGetApiListing() {
		return getApiListing;
	}

	public void setGetApi(Api getApi) {
		this.getApi = getApi;
	}

	public Api getGetApi() {
		return getApi;
	}

	public void setGetTags(List<Tag> getTags) {
		this.getTags = getTags;
	}

	public List<Tag> getGetTags() {
		return getTags;
	}

    public String toString() {
        return "Query {"
				+ "getApiListing: " + getApiListing
				+ ", "
				+ "getApi: " + getApi
				+ ", "
				+ "getTags: " + getTags
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		GetApiListing("getApiListing"),
		GetApi("getApi"),
		GetTags("getTags");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private ApiListing getApiListing;
		private Api getApi;
		private List<Tag> getTags;


		public Builder withGetApiListing(ApiListing getApiListing) {
			this.getApiListing = getApiListing;
			return this;
		}
		public Builder withGetApi(Api getApi) {
			this.getApi = getApi;
			return this;
		}
		public Builder withGetTags(List<Tag> getTags) {
			this.getTags = getTags;
			return this;
		}

		public Query build() {
			Query _object = new Query();
			_object.setGetApiListing(getApiListing);
			_object.setGetApi(getApi);
			_object.setGetTags(getTags);
			return _object;
		}
	}
}
